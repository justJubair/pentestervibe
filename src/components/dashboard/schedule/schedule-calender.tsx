import { FC } from 'react';
import { useState } from 'react';
import { Select, SelectContent, SelectGroup, SelectItem, SelectTrigger, SelectValue } from '../../ui/select';


const ScheduleCalender: FC = () => {
    const [month, setMonth] = useState(new Date().getMonth());
    const [year, setYear] = useState(new Date().getFullYear());

    // month array
    const months = [
        'January', 'February', 'March', 'April', 'May', 'June',
        'July', 'August', 'September', 'October', 'November', 'December'
    ];

    // calculate total days in month
    const daysInMonth = (month: number, year: number) => new Date(year, month + 1, 0).getDate();
    const firstDayOfMonth = (month: number, year: number) => new Date(year, month, 1).getDay();

    // render days
    const renderDays = () => {
        const totalDays = daysInMonth(month, year);
        const firstDay = firstDayOfMonth(month, year);
        const daysArray = Array.from({ length: totalDays }, (_, i) => i + 1);
        const paddingDays = Array.from({ length: firstDay }, (_, ) => '');

        return [...paddingDays, ...daysArray].map((day, index) => (
            <div className='cursor-pointer' key={index}>{day}</div>
        ));
    };

    return (
        <div className='rounded-[32px] bg-accent min-h-[40vh] w-full h-full p-6'>
            <div className="">
                <h4 className="text-2xl font-bold">Calender</h4>
            </div>
            <hr className='border-white/10 my-6' />
            <div className="">
                {/* monht and year select start */}
                <div className="flex gap-6 items-center my-4">
                    <Select value={month.toString()} onValueChange={(value) => setMonth(parseInt(value))}>
                        <SelectTrigger className="w-[180px] backdrop-blur-md border rounded-xl">
                            <SelectValue placeholder="Select a fruit" />
                        </SelectTrigger>
                        <SelectContent>
                            <SelectGroup>
                                {months.map((m, index) => (
                                    <SelectItem key={index} value={index.toString()}>{m}</SelectItem>
                                ))}
                            </SelectGroup>
                        </SelectContent>
                    </Select>
                    <Select value={year.toString()} onValueChange={(value) => setYear(parseInt(value))}>
                        <SelectTrigger className="w-[180px] backdrop-blur-md border rounded-xl">
                            <SelectValue placeholder="Select a fruit" />
                        </SelectTrigger>
                        <SelectContent>
                            <SelectGroup>
                                {Array.from({ length: 15 }, (_, i) => year - 5 + i).map((y, index) => (
                                    <SelectItem key={index} value={y.toString()}>{y}</SelectItem>
                                ))}

                            </SelectGroup>
                        </SelectContent>
                    </Select>
                </div>
                {/* monht and year select start */}

                <div className="grid grid-cols-7 gap-6 text-center font-semibold">
                    <div className="">Sun</div>
                    <div className="">Mon</div>
                    <div className="">Tue</div>
                    <div className="">Wed</div>
                    <div className="">Thu</div>
                    <div className="">Fri</div>
                    <div className="">Sat</div>
                    {renderDays()}
                </div>
            </div>
        </div>
    );
};

export default ScheduleCalender;
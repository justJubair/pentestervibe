import { FC, useEffect, useRef, useState } from 'react';
import { Link, NavLink } from 'react-router-dom';

import { navLinks } from '../../assets/nav-links';

const Navbar: FC = () => {
	const [isMenuOpen, setIsMenuOpen] = useState(false);
	const menuRef = useRef<HTMLDivElement | null>(null);
	const menuToggleButtonRef = useRef<HTMLDivElement>(null);

	// dropdown manu handler
	const handleMenuToggler = () => {
		setIsMenuOpen(pre => !pre);
	}


	// user menu outside click handler
	const handleClickOutside = (event: Event) => {
		if (menuRef.current && !menuRef.current.contains(event.target as Node) && menuToggleButtonRef.current && !menuToggleButtonRef.current.contains(event.target as Node)) {
			setIsMenuOpen(false);
		}
	};


	// menu outside click handler
	useEffect(() => {
		// Add the event listener when the component mounts
		document.addEventListener("mousedown", handleClickOutside);
		// Remove the event listener when the component unmounts
		return () => {
			document.removeEventListener("mousedown", handleClickOutside);
		};
	}, []);


	return (
		<div className='w-full max-w-6xl mx-auto bg-[#474058]/20 flex items-center justify-between p-8 rounded-xl relative mt-8 md:mb-10'>
			{/* logo start */}
			<Link to='/'>
				<img src='/svg/logo-with-text.svg' alt='logo' className='h-10' />
			</Link>
			{/* logo end */}

			{/* navlinks for larger devices start */}
			<div className=' items-center gap-x-10 text-sm hidden lg:flex'>
				<NavLink
					to={'/'}
					className={({ isActive }) => {
						return isActive
							? 'text-white font-semibold'
							: 'text-gray-400 hover:text-white';
					}}
				>
					Home
				</NavLink>
				{/* {navLinks.map(({ title, path }) => (
					<NavLink
						key={title}
						to={path}
						className={({ isActive }) => {
							return isActive
								? 'text-white font-semibold'
								: 'text-gray-400 hover:text-white';
						}}
					>
						{title}
					</NavLink>
				))} */}
				{navLinks.map(({ title }) => (
					<button
						key={title}
						disabled
						className={'text-gray-400 '}
					>
						{title}
					</button>
				))}
			</div>
			{/* navlinks for larger devices start */}

			{/* navlinks for smaller devices start */}
			<div
				ref={menuRef}
				className={`absolute lg:hidden right-0 top-[100px] z-20 w-[70%] max-w-72 mx-auto rounded-b-[8px] origin-top duration-300 ${isMenuOpen ? "scale-y-100" : "scale-y-0"} blur-background flex flex-col gap-6 backdrop-blur-xl px-6 py-6`} >
				{/* {navLinks.map(({ title, path }) => (
					<NavLink
						key={title}
						to={path}
						onClick={handleMenuToggler}
						className={({ isActive }) => {
							return isActive
								? 'text-white font-semibold'
								: 'text-gray-400 hover:text-white';
						}}
					>
						{title}
					</NavLink>
				))} */}
				{navLinks.map(({ title }) => (
					<button
						key={title}
						disabled
						className={'text-gray-400'}
					>
						{title}
					</button>
				))}
				<Link
					to='/login'
					className='w-full py-3 text-sm text-center bg-secondary font-semibold rounded-md border border-secondary'
				>
					Login
				</Link>

				<Link
					to='/register'
					className='w-full py-3 text-sm text-center text-[#EF57F5] font-semibold rounded-md border border-gray-400'
				>
					Registration
				</Link>
			</div>
			{/* navlinks for smaller devices end */}

			{/* dropdown button start */}
			<div className='lg:hidden'>
				<div ref={menuToggleButtonRef}>
					<input onChange={handleMenuToggler} checked={isMenuOpen} type="checkbox" id="checkbox" />
					<label htmlFor="checkbox" className="toggle">
						<div className="bars" id="bar1"></div>
						<div className="bars" id="bar2"></div>
						<div className="bars" id="bar3"></div>
					</label>
				</div>
			</div>
			{/* dropdown button end */}

			{/* login and logout button start */}
			<div className='hidden lg:flex items-center gap-x-5 md:gap-x-10'>
				{/* <Link
					to='/login'
					className='w-32 py-3 text-sm text-center bg-secondary font-semibold rounded-md border border-secondary'
				>
					Login
				</Link> */}

				<button
					className='w-32 py-3 text-sm text-center text-[#EF57F5] font-semibold rounded-md border border-gray-400'
				>
					Coming Soon
				</button>
			</div>
			{/* login and logout button end */}
		</div>
	);
};

export default Navbar;

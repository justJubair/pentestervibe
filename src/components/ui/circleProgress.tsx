

const CircleProgress = ({ progress }: { progress: number }) => {
    const radius = 100;
    const stroke = 15;
    const normalizedRadius = radius - stroke * 2;
    const circumference = normalizedRadius * 2 * Math.PI;
    const strokeDashoffset = circumference - (progress / 100) * circumference;

    return (
        <div className="inline-block text-center relative">
            <svg
                height={radius * 2}
                width={radius * 2}
            >
                <circle
                    className="opacity-[0.1]"
                    stroke="#474058"
                    fill="transparent"
                    strokeWidth={stroke}
                    r={normalizedRadius}
                    cx={radius}
                    cy={radius}
                />
                <circle
                    className="progress-circle"
                    stroke="#DB85DE"
                    fill="transparent"
                    strokeWidth={stroke}
                    strokeDasharray={`${circumference} ${circumference}`}
                    style={{ strokeDashoffset }}
                    strokeLinecap="round"
                    r={normalizedRadius}
                    cx={radius}
                    cy={radius}
                />
            </svg>
            <div className="progress-text top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2  text-white text-3xl font-bold absolute h-full w-full flex items-center justify-center">
                {progress}%
            </div>
        </div>
    );
};

export default CircleProgress;
